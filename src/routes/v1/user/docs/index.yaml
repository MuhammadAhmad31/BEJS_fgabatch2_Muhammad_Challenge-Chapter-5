tags:
  - name: Users
    description: User management

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: object


paths:
  /users:
    get:
      tags:
        - Users
      summary: Retrieve a list of users
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users per page
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        email:
                          type: string
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user:
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "password123"
                profile:
                  type: string
                  example: "User profile"
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      email:
                        type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
